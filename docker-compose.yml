services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: autoparts
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d autoparts"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  redis:
    image: redis:7
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.alternative
    command: /usr/local/bin/entrypoint.sh daphne -b 0.0.0.0 -p 8000 backend.asgi:application
    volumes:
      - ./backend:/app
      - ./backend/media:/app/media
      - ./backend/static:/app/static
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgres://postgres:postgres@db:5432/autoparts
      - POSTGRES_DB=autoparts
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - DEBUG=True
      - PYTHONUNBUFFERED=1
    restart: always
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
        reservations:
          memory: 128M
          cpus: '0.1'

  celery:
    build: 
      context: ./backend
      dockerfile: Dockerfile.alternative
    command: /usr/local/bin/entrypoint.sh celery -A backend worker -l info --concurrency=1 --max-tasks-per-child=10 --prefetch-multiplier=1
    volumes:
      - ./backend:/app
      - ./backend/media:/app/media
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgres://postgres:postgres@db:5432/autoparts
      - POSTGRES_DB=autoparts
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - DISPLAY=:99
      - CHROME_HEADLESS=1
      - CHROME_NO_SANDBOX=1
      - CHROME_DISABLE_DEV_SHM=1
      - CHROME_USER_DATA_DIR=/tmp/chrome
      - CHROME_REMOTE_DEBUGGING_PORT=0
      - DEBUG=True
      - PYTHONUNBUFFERED=1
    restart: always
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.8'
        reservations:
          memory: 512M
          cpus: '0.4'
    shm_size: '256mb'

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    depends_on:
      - backend
    restart: always

  nginx:
    image: nginx:1.25
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./backend/static:/static
      - ./backend/media:/media
      - ./frontend/proxy-manager.html:/app/frontend/proxy-manager.html:ro
      # - ./nginx/certs:/etc/nginx/certs:ro  # если нужен HTTPS
    depends_on:
      - backend
      - frontend
    restart: always