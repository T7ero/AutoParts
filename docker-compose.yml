version: '3.9'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: autoparts
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always

  redis:
    image: redis:7
    restart: always

  backend:
    build: ./backend
    command: daphne -b 0.0.0.0 -p 8000 backend.asgi:application
    volumes:
      - ./backend:/app
      - media_data:/app/media
      - static_data:/app/static
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgres://postgres:postgres@db:5432/autoparts
    restart: always

  celery:
    build: ./backend
    command: celery -A backend worker -l info
    volumes:
      - ./backend:/app
      - media_data:/app/media
    depends_on:
      - backend
      - redis
      - db
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DATABASE_URL=postgres://postgres:postgres@db:5432/autoparts
    restart: always

  frontend:
    build: ./frontend
    depends_on:
      - backend
    restart: always

  nginx:
    image: nginx:1.25
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_data:/static
      - media_data:/media
      # Для HTTPS:
      # - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - backend
      - frontend
    restart: always

volumes:
  db_data:
  media_data:
  static_data:
