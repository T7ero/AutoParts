# nginx.conf для AutoParts (Django + React + WebSocket)
# Разместить в корне проекта

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

# Максимальный размер загружаемых файлов
client_max_body_size 50M;

# Gzip для ускорения отдачи
http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Upstream для Django backend (daphne/gunicorn)
    upstream backend {
        server 127.0.0.1:8000;
    }

    # Upstream для WebSocket (daphne)
    upstream websocket {
        server 127.0.0.1:8000;
    }

    # Серверный блок
    server {
        listen 80;
        server_name _;
        # Корень для React build
        root /app/frontend/build;

        # Безопасность
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # CORS (если нужно)
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";

        # Обработка preflight
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        # Проксирование API на Django
        location /api/ {
            proxy_pass http://backend/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300;
        }

        # WebSocket (Channels)
        location /ws/ {
            proxy_pass http://websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 600s;
        }

        # Отдача статики Django
        location /static/ {
            alias /app/backend/static/;
            expires 30d;
            access_log off;
        }

        # Отдача media Django
        location /media/ {
            alias /app/backend/media/;
            expires 30d;
            access_log off;
        }

        # React SPA fallback (index.html)
        location / {
            try_files $uri $uri/ /index.html;
        }
    }
}