#!/usr/bin/env python3
"""
–¢–µ—Å—Ç API endpoints –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã
"""

import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL = "http://87.228.101.164"  # –í–∞—à IP –∞–¥—Ä–µ—Å
API_TOKEN = "your_token_here"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω

def test_api_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ API endpoints"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints")
    print("=" * 50)
    
    # 1. –¢–µ—Å—Ç–æ–≤—ã–π endpoint
    print("1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /api/test/...")
    try:
        response = requests.get(f"{BASE_URL}/api/test/")
        if response.status_code == 200:
            print("‚úÖ /api/test/ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"–û—Ç–≤–µ—Ç: {response.json()}")
        else:
            print(f"‚ùå /api/test/ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            print(response.text)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ /api/test/: {str(e)}")
    
    print()
    
    # 2. –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
    print("2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /api/parsing-tasks/...")
    try:
        response = requests.get(f"{BASE_URL}/api/parsing-tasks/")
        if response.status_code == 200:
            print("‚úÖ /api/parsing-tasks/ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            tasks = response.json()
            print(f"–ù–∞–π–¥–µ–Ω–æ –∑–∞–¥–∞—á: {len(tasks)}")
            
            # –ò—â–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—É—é –∑–∞–¥–∞—á—É
            completed_task = None
            for task in tasks:
                if task.get('status') == 'completed' and task.get('result_files'):
                    completed_task = task
                    break
            
            if completed_task:
                print(f"–ù–∞–π–¥–µ–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞: #{completed_task['id']}")
                print(f"Result files: {completed_task['result_files']}")
                
                # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø–æ —Å–∞–π—Ç–∞–º
                print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø–æ —Å–∞–π—Ç–∞–º...")
                for site in completed_task['result_files'].keys():
                    print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º {site}...")
                    try:
                        download_url = f"{BASE_URL}/api/parsing-tasks/{completed_task['id']}/download-site/{site}/"
                        print(f"URL: {download_url}")
                        
                        response = requests.get(download_url)
                        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
                        
                        if response.status_code == 200:
                            print(f"‚úÖ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ {site} —Ä–∞–±–æ—Ç–∞–µ—Ç")
                        elif response.status_code == 404:
                            print(f"‚ùå 404 –¥–ª—è {site}")
                        else:
                            print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å {response.status_code} –¥–ª—è {site}")
                            print(f"–û—Ç–≤–µ—Ç: {response.text}")
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ {site}: {str(e)}")
            else:
                print("‚ö†Ô∏è –ù–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á —Å result_files –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        else:
            print(f"‚ùå /api/parsing-tasks/ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {response.status_code}")
            print(response.text)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ /api/parsing-tasks/: {str(e)}")
    
    print("\n" + "=" * 50)
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_api_endpoints()
