#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –≤ API
"""

import requests
import pandas as pd
import tempfile
import os

def create_test_file():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π Excel —Ñ–∞–π–ª"""
    data = {
        '–ë—Ä–µ–Ω–¥ ‚Ññ 1': ['Toyota', 'Honda', 'Nissan'],
        '–ê—Ä—Ç–∏–∫—É–ª –ø–æ –ë—Ä–µ–Ω–¥—É ‚Ññ 1': ['12345', '67890', '11111'],
        '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ': ['–§–∏–ª—å—Ç—Ä –º–∞—Å–ª—è–Ω—ã–π', '–¢–æ—Ä–º–æ–∑–Ω—ã–µ –∫–æ–ª–æ–¥–∫–∏', '–°–≤–µ—á–∏ –∑–∞–∂–∏–≥–∞–Ω–∏—è']
    }
    
    df = pd.DataFrame(data)
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with tempfile.NamedTemporaryFile(suffix='.xlsx', delete=False) as tmp:
        df.to_excel(tmp.name, index=False)
        return tmp.name

def test_upload():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞"""
    # URL API
    base_url = "http://localhost"
    token_url = f"{base_url}/api/auth/token/"
    upload_url = f"{base_url}/api/parsing-tasks/"
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    auth_data = {
        'username': 'admin',
        'password': 'admin'
    }
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        print("üîê –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
        response = requests.post(token_url, data=auth_data)
        
        if response.status_code != 200:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return
        
        token = response.json()['token']
        print(f"‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {token[:10]}...")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        print("üìÑ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª...")
        test_file_path = create_test_file()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª
        print("üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª...")
        headers = {
            'Authorization': f'Token {token}'
        }
        
        with open(test_file_path, 'rb') as f:
            files = {'file': f}
            response = requests.post(upload_url, headers=headers, files=files)
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        os.unlink(test_file_path)
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"üìã –û—Ç–≤–µ—Ç: {response.text}")
        
        if response.status_code == 201:
            print("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
            task_data = response.json()
            print(f"üÜî ID –∑–∞–¥–∞—á–∏: {task_data.get('id')}")
            print(f"üìä –°—Ç–∞—Ç—É—Å: {task_data.get('status')}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

if __name__ == "__main__":
    test_upload() 