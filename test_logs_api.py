#!/usr/bin/env python3
"""
–¢–µ—Å—Ç API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤ –∑–∞–¥–∞—á
"""

import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BASE_URL = "http://localhost:8000"
API_TOKEN = "your_token_here"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω

def test_task_logs():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤ –∑–∞–¥–∞—á–∏"""
    
    # 1. –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
    print("1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á...")
    try:
        response = requests.get(
            f"{BASE_URL}/api/parsing-tasks/",
            headers={'Authorization': f'Token {API_TOKEN}'}
        )
        
        if response.status_code == 200:
            tasks = response.json()
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–¥–∞—á: {len(tasks)}")
            
            if tasks:
                # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é –∑–∞–¥–∞—á—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                first_task = tasks[0]
                task_id = first_task['id']
                print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–¥–∞—á—É #{task_id}")
                
                # 2. –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–∏ –¥–ª—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏
                print(f"\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤ –¥–ª—è –∑–∞–¥–∞—á–∏ #{task_id}...")
                logs_response = requests.get(
                    f"{BASE_URL}/api/parsing-tasks/{task_id}/logs/",
                    headers={'Authorization': f'Token {API_TOKEN}'}
                )
                
                if logs_response.status_code == 200:
                    logs_data = logs_response.json()
                    print("‚úÖ –õ–æ–≥–∏ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
                    print(f"–°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏: {logs_data['status']}")
                    print(f"–ü—Ä–æ–≥—Ä–µ—Å—Å: {logs_data['progress']}%")
                    print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –ª–æ–≥–æ–≤: {len(logs_data['logs'])}")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ª–æ–≥–æ–≤
                    print("\n–ü–µ—Ä–≤—ã–µ –ª–æ–≥–∏:")
                    for i, log in enumerate(logs_data['logs'][:5]):
                        print(f"  {i+1}. [{log['timestamp']}] {log['message']}")
                        
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–≥–æ–≤: {logs_response.status_code}")
                    print(logs_response.text)
            else:
                print("‚ö†Ô∏è –ù–µ—Ç –∑–∞–¥–∞—á –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–¥–∞—á: {response.status_code}")
            print(response.text)
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Django –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8000")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

def test_without_auth():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    print("\n3. –¢–µ—Å—Ç –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...")
    
    try:
        response = requests.get(f"{BASE_URL}/api/parsing-tasks/1/logs/")
        if response.status_code == 401:
            print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ —Ç—Ä–µ–±—É–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é")
        else:
            print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –ª–æ–≥–æ–≤ –∑–∞–¥–∞—á")
    print("=" * 50)
    
    test_task_logs()
    test_without_auth()
    
    print("\n" + "=" * 50)
    print("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    
    print("\nüìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Django —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: python manage.py runserver")
    print("2. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ /api/auth/token/")
    print("3. –û–±–Ω–æ–≤–∏—Ç–µ API_TOKEN –≤ —ç—Ç–æ–º —Ñ–∞–π–ª–µ")
    print("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç —Å–Ω–æ–≤–∞: python test_logs_api.py")
